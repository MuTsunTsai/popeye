output/plaintext/line/line$(OBJ_SUFFIX): output/plaintext/line/line.c \
 output/plaintext/line/line.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 conditions/conditions.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/fork.h output/output.h solving/machinery/slack_length.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/branch.h stipulation/move.h \
 stipulation/help_play/branch.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/trivial_end_filter.h stipulation/slice_insertion.h \
 stipulation/battle_play/branch.h \
 output/plaintext/move_inversion_counter.h \
 output/plaintext/illegal_selfcheck_writer.h \
 output/plaintext/ohneschach_detect_undecidable_goal.h \
 output/plaintext/goal_writer.h output/plaintext/end_of_phase_writer.h \
 output/plaintext/line/exclusive.h output/plaintext/line/line_writer.h \
 output/plaintext/line/end_of_intro_series_marker.h solving/ply.h \
 output/plaintext/line/refuting_variation_writer.h debugging/assert.h

output/plaintext/line/line.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

conditions/conditions.h:

position/position.h:

position/color.h:

position/color.enum.h:

position/color.enum:

position/pieceid.h:

pieces/walks/vectors.h:

position/castling_rights.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

stipulation/fork.h:

output/output.h:

solving/machinery/slack_length.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/has_solution_type.enum:

stipulation/branch.h:

stipulation/move.h:

stipulation/help_play/branch.h:

solving/machinery/solve.h:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/trivial_end_filter.h:

stipulation/slice_insertion.h:

stipulation/battle_play/branch.h:

output/plaintext/move_inversion_counter.h:

output/plaintext/illegal_selfcheck_writer.h:

output/plaintext/ohneschach_detect_undecidable_goal.h:

output/plaintext/goal_writer.h:

output/plaintext/end_of_phase_writer.h:

output/plaintext/line/exclusive.h:

output/plaintext/line/line_writer.h:

output/plaintext/line/end_of_intro_series_marker.h:

solving/ply.h:

output/plaintext/line/refuting_variation_writer.h:

debugging/assert.h:
output/plaintext/line/line_writer$(OBJ_SUFFIX): output/plaintext/line/line_writer.c \
 output/plaintext/line/line_writer.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h utilities/boolean.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum pieces/pieces.h output/mode.h output/mode.enum.h \
 output/mode.enum solving/machinery/dispatch.h debugging/trace.h \
 output/plaintext/protocol.h output/plaintext/move_inversion_counter.h \
 output/plaintext/line/end_of_intro_series_marker.h solving/ply.h \
 output/plaintext/plaintext.h output/output.h output/plaintext/message.h \
 output/message.h input/plaintext/language.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/move_effect_journal.h position/castling_rights.h \
 position/pieceid.h solving/check.h debugging/measure.h \
 solving/move_generator.h platform/beep.h solving/pipe.h \
 options/options.h debugging/assert.h

output/plaintext/line/line_writer.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

output/plaintext/protocol.h:

output/plaintext/move_inversion_counter.h:

output/plaintext/line/end_of_intro_series_marker.h:

solving/ply.h:

output/plaintext/plaintext.h:

output/output.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/has_solution_type.enum:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

solving/move_effect_journal.h:

position/castling_rights.h:

position/pieceid.h:

solving/check.h:

debugging/measure.h:

solving/move_generator.h:

platform/beep.h:

solving/pipe.h:

options/options.h:

debugging/assert.h:
output/plaintext/line/end_of_intro_series_marker$(OBJ_SUFFIX): \
 output/plaintext/line/end_of_intro_series_marker.c \
 output/plaintext/line/end_of_intro_series_marker.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/pipe.h debugging/assert.h

output/plaintext/line/end_of_intro_series_marker.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/ply.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

solving/pipe.h:

debugging/assert.h:
output/plaintext/line/exclusive$(OBJ_SUFFIX): output/plaintext/line/exclusive.c \
 output/plaintext/line/exclusive.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 conditions/exclusive.h utilities/table.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h output/plaintext/protocol.h \
 output/plaintext/line/line_writer.h output/plaintext/message.h \
 output/message.h input/plaintext/language.h solving/pipe.h \
 debugging/assert.h

output/plaintext/line/exclusive.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

solving/has_solution_type.h:

solving/has_solution_type.enum.h:

solving/has_solution_type.enum:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

conditions/exclusive.h:

utilities/table.h:

position/position.h:

position/color.h:

position/color.enum.h:

position/color.enum:

position/pieceid.h:

pieces/walks/vectors.h:

position/castling_rights.h:

solving/ply.h:

output/plaintext/protocol.h:

output/plaintext/line/line_writer.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

solving/pipe.h:

debugging/assert.h:
output/plaintext/line/refuting_variation_writer$(OBJ_SUFFIX): \
 output/plaintext/line/refuting_variation_writer.c \
 output/plaintext/line/refuting_variation_writer.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h solving/ply.h output/plaintext/protocol.h \
 output/plaintext/move_inversion_counter.h output/plaintext/message.h \
 output/message.h input/plaintext/language.h output/plaintext/tree/tree.h \
 solving/pipe.h

output/plaintext/line/refuting_variation_writer.h:

solving/machinery/solve.h:

stipulation/stipulation.h:

stipulation/goals/goals.h:

position/board.h:

utilities/bitmask.h:

utilities/boolean.h:

stipulation/slice_type.h:

stipulation/slice_type.enum.h:

stipulation/slice_type.enum:

position/side.h:

position/side.enum.h:

position/side.enum:

pieces/pieces.h:

output/mode.h:

output/mode.enum.h:

output/mode.enum:

solving/machinery/dispatch.h:

debugging/trace.h:

stipulation/pipe.h:

stipulation/structure_traversal.h:

stipulation/slice.h:

stipulation/slice_structural_type.h:

stipulation/slice_structural_type.enum.h:

stipulation/slice_structural_type.enum:

stipulation/slice_functional_type.h:

stipulation/slice_functional_type.enum.h:

stipulation/slice_functional_type.enum:

stipulation/slice_contextual_type.h:

stipulation/slice_contextual_type.enum.h:

stipulation/slice_contextual_type.enum:

stipulation/traversal.h:

stipulation/branch.h:

solving/ply.h:

output/plaintext/protocol.h:

output/plaintext/move_inversion_counter.h:

output/plaintext/message.h:

output/message.h:

input/plaintext/language.h:

output/plaintext/tree/tree.h:

solving/pipe.h:
